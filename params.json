{"name":"Epochserver","tagline":"Epoch Server DB extension (DLL / so) for Arma 3","body":"ArmA3-EpochServer\r\n=================\r\n\r\nArmA3 Epochmod Server Library\r\nhttp://epochmod.com/\r\n\r\n--------------------------\r\nDevelopers\r\n--------------------------\r\n* Aaron Clark - [VB]AWOL - Game Design,  Code\r\n* Florian Kinder - Fank - DLL Code\r\n* Denis Erygin - devd - Linux DLL Support\r\n\r\n---------------------------\r\nInstall Notes\r\n---------------------------\r\nHive DLL requires vs2013 redist: http://www.microsoft.com/en-us/download/details.aspx?id=40784\r\n\r\n---------------------------\r\nResources\r\n---------------------------\r\n* MSOpenTech - https://github.com/MSOpenTech/Redis\r\n\r\n\r\nHow to build on Linux\r\n--------------------------------\r\n\r\nneed to install packages: \r\nlibhiredis-dev\r\nlibpcre3-dev\r\n\r\n\r\nHow to build DLL (Visual Studio)\r\n--------------------------------\r\n\r\n1. `git submodule update --init`\r\n2. Download latest PCRE version from [Airesoft](http://www.airesoft.co.uk/pcre) and extract the content in `/Assets/EpochServer/deps/pcre-win`\r\n2. Open `RedisServer.sln` in `/Assets/EpochServer/deps/redis/msvs`\r\n3. Compile all Projects with the same config (x32|x64 Debug|Release) as EpochServer\r\n4. After the RedisServer dependency is successfully compiled open `EpochServer.sln` in `/Assets/EpochServer/msvs`\r\n5. Compile\r\n\r\nCall summary\r\n------------\r\n\r\nSyntax: [Group][Operator][Flag]\r\n\r\n* 0 (Init)\r\n\t* 0 \r\n\t\t* 0  (Get and return Instance ID from config)\r\n\t\t* 1  (STEAMAPI - Vac ban check) \r\n* 1 (Setter)\r\n\t* 0 (Temporarily stack, workaround for calls which are too long)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n\t* 1 (Redis call SET)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n\t* 2 (Redis call SETEX)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n\t* 3 (Redis call EXPIRE)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n\t* 4 (Redis call SETBIT)\r\n\t\t* 1 (Asyncron)\r\n* 2 (Getter)\r\n\t* 0 (Redis call GET)\r\n\t\t* 0 (Syncron)\r\n\t* 1 (Redis call GET + TTL)\r\n\t\t* 0 (Syncron)\r\n\t* 2 (Redis call GETRANGE)\r\n\t\t* 0 (Syncron)\t\t\r\n\t* 4 (Redis call GETBIT)\r\n\t\t* 0 (Syncron)\r\n* 3 (TTL)\r\n\t* 0 (Redis call TTL)\r\n\t\t* 0 (Syncron)\r\n* 4 (Delete)\r\n\t* 0 (Redis call DEL)\r\n\t\t* 0 (Syncron)\r\n* 5 (Utilities)\r\n\t* 0 (Redis call PING)\r\n\t\t* 0 (Syncron)\r\n\t* 1 (Get current time, [YYYY,MM,DD,HH,MM,SS])\r\n\t\t* 0 (Syncron)\r\n* 6 (Array)\r\n\t* 0 (Redis call LPOP, with `CMD` prefix)\r\n\t\t* 0 (Syncron)\r\n* 7 (Logging)\r\n\t* 0 (Log in Redis)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n* 8 (Antihack)\r\n\t* 0 (Update publicvariable.txt)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n\t* 1 (Get random string, [a-zA-Z]{23-30}, if only one string is requested it will return a string instead of a array)\r\n\t\t* 0 (Syncron)\r\n\t* 2 (Add ban to bans.txt)\r\n\t\t* 0 (Syncron)\r\n\t\t* 1 (Asyncron)\r\n* 9 (Battleye)\r\n\t* 0 (Broadcast message to server)\r\n\t\t* 1 (Asyncron)\r\n\t* 1 (Kick with message)\r\n\t\t* 1 (Asyncron)\r\n\t* 2 (Ban with message and duration)\r\n\t\t* 1 (Asyncron)\r\n\t* 3 (Lock/Unlock server)\r\n\t\t* 0 (Unlock)\r\n\t\t* 1 (Lock)\r\n\t* 9 (Shutdown Server)\r\n\t\t* 1 (Asyncron)\r\n\r\nEpochServer.ini Guide\r\n---------------------\r\n\r\n* `[EpochServer]`\r\n\t* `BattlEyePath` This is the path to the battleye folder which is needed for the AntiHack [default: \"PROFILEPATH/battleye\"]\r\n\t* `InstanceID` Current server instance for the database [default: \"NA123\"]\r\n\t* `LogAbuse` Enables abuse logging [default: 0, 0: none, 1: redis key, 2: redis key & value]\r\n* `[Redis]`\r\n\t* `IP` Redis server ip/hostname [default: 127.0.0.1]\r\n\t* `Port` Redis server port 0-65535 [default: 6379]\r\n\t* `DB` Database index [default: 0]\r\n\t* `Password` Password [default: `<no password>`]\r\n* `[SteamAPI]`\r\n\t* `Logging` Enable logging for SteamAPI [default: 0, 0: disabled, 1: ban reason, 2: info/debug]\r\n\t* `Key` Steam Web API key (can be requested here: http://steamcommunity.com/dev/apikey), if no key is given the SteamAPI is disabled [default: `<no key>`]\r\n\t* `VACBanned` Players with a vac ban will be banned by writing the ban in bans.txt [default: 0, 0: disabled, 1: enabled]\r\n\t* `VACMinimumNumberOfBans` Players with the given minimun of vac bans will be banned, same as VACBanned [default: 0, 0:  disabled]\r\n\t* `VACMaximumDaysSinceLastBan` Players will be banned until the VAC ban will reach the maximum, same as VACBanned [default: 0, 0: disabled]\r\n\t* `PlayerAllowOlderThan` Player will be banned if the account creation date is younger than the allowed value (in seconds) [default: 0, 0: disabled]\r\n\r\n\r\nCalls Documentation\r\n---------------------\r\n\r\nFull A3 epoch server hive call documentation\r\n\r\n**000**\r\n\r\nGet and return Instance ID from config\r\n\r\n_Input: None_\r\n\r\n_Returns: [ARRAY](https://community.bistudio.com/wiki/Array) format: [\"NA123\"]_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension \"000\";\r\n```\r\n\r\n\r\n**001**\r\n\r\nSTEAMAPI - Vac ban check\r\n\r\n_Input: [SteamID64](https://community.bistudio.com/wiki/getPlayerUID)_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"001|%1\", _uid];\r\n```\r\n\r\n\r\n**100**\r\n\r\nSetter - Temporarily stack, workaround for Arma 8k character limitation. Used in combination with the SET or SETEX calls.\r\n\r\n\r\n\r\n_Uses:  SET_\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Call Index ID, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"100|%1:%2|%3|%4\", 100, _prefix, _key, _hiveCallID, _value];\r\n```\r\n\r\n\r\n**101** \r\n\r\n\r\nSetter - Temporarily stack, workaround for Arma 8k character limitation. Used in combination with the SET or SETEX calls.\r\n\r\n\r\n_Uses:  SET_\r\n\r\n_Call Type: Asynchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Call Index ID, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"100|%1:%2|%3|%4\", 101, _prefix, _key, _hiveCallID, _value];\r\n```\r\n\r\n\r\n**110** \r\n\r\nStore value in database with the specified key\r\n\r\n\r\n_Uses:  SET_\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Call Index ID, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"110|%1:%2|%3|%4\", _prefix, _key, _hiveCallID, _value];\r\n```\r\n\r\n\r\n**111**\r\n\r\n\r\nStore value in database with the specified key\r\n\r\n\r\n_Uses:  SET_\r\n\r\n_Call Type: Asynchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Call Index ID, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"111|%1:%2|%3|%4\", _prefix, _key, _hiveCallID, _value];\r\n```\r\n\r\n\r\n**120**\r\n\r\n\r\n_Uses:  SETEX_\r\n\r\n_Call Type: Asynchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Expires, Call Index ID, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"120|%1:%2|%3|%4|%5\", _prefix, _key, _expires, _hiveCallID, _value];\r\n```\r\n\r\n\r\n**121**\r\n\r\n\r\nStore value in database with the specified key and expiration.\r\n\r\n\r\n_Uses:  SETEX_\r\n\r\n_Call Type: Asynchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Expires, Call Index ID, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n```\r\n\"epochserver\" callExtension format[\"121|%1:%2|%3|%4|%5\", _prefix, _key, _expires, _hiveCallID, _value];\r\n```\r\n\r\n\r\n**130**\r\n\r\n\r\nSet a timeout on key. After the timeout has expired, the key will automatically be deleted.\r\n\r\n\r\n_Uses:  [EXPIRE](http://redis.io/commands/expire)_\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Expires_\r\n\r\n_Returns: Nothing_\r\n\r\n```\r\n\"epochserver\" callExtension format [\"130|%1:%2|%3\", _prefix, _key, _expires];\r\n```\r\n\r\n**131**\r\n\r\n\r\nSet a timeout on key. After the timeout has expired, the key will automatically be deleted.\r\n\r\n\r\n\r\n_Uses:  [EXPIRE](http://redis.io/commands/expire)_\r\n\r\n_Call Type: Asynchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Expires_\r\n\r\n_Returns: Nothing_\r\n\r\n```\r\n\"epochserver\" callExtension format [\"130|%1:%2|%3\", _prefix, _key, _expires];\r\n```\r\n\r\n\r\n**140**\r\n\r\nSets or clears the bit at offset in the string value stored at key.\r\n\r\n\r\n\r\n_Uses: [SETBIT](http://redis.io/commands/setbit)_\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Bit Index, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"140|%1:%2|%3|%4\", _prefix, _key, _bitIndex, _value];\r\n```\r\n\r\n\r\n**141**\r\n\r\n\r\nSets or clears the bit at offset in the string value stored at key.\r\n\r\n\r\n_Uses: [SETBIT](http://redis.io/commands/setbit)_\r\n\r\n_Call Type: Asynchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Bit Index, Value_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"141|%1:%2|%3|%4\", _prefix, _key, _bitIndex, _value];\r\n```\r\n\r\n\r\n**200**\r\n\r\n_Uses: GET_\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Bit Index, Value_\r\n\r\n_Returns: _Array\r\n\r\n\r\n```\r\n_hiveResponse = \"epochserver\" callExtension format [\"200|%1:%2\", _prefix, _key];\r\n```\r\n\r\n\r\n**210**\r\n\r\n\r\n_Uses: GET, TLL_\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Bit Index, Value_\r\n\r\n_Returns: Array_\r\n\r\n```\r\n_hiveResponse = \"epochserver\" callExtension format [\"210|%1:%2\", _prefix, _key];\r\n```\r\n\r\n\r\n**220**\r\n\r\n\r\n_Uses: GETRANGE_\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Start Index, Stop Index_\r\n\r\n_Returns: Array_\r\n\r\n```\r\n_hiveResponse = \"epochserver\" callExtension format[\"220|%1:%2|%3|%4\", _prefix, _key, _currentIndex, (_currentIndexMax-1)];\r\n```\r\n\r\n\r\n**230**\r\n\r\n_Uses: GETBIT_\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro), Bit Index, Value (0-1)_\r\n\r\n_Returns: BOOL_\r\n\r\n\r\n```\r\n_hiveResponse = \"epochserver\" callExtension format[\"240|%1:%2|%3\", _prefix, _key, _value];\r\n```\r\n\r\n\r\n\r\n**300**\r\n\r\n\r\n\r\n_Uses: [TTL](http://redis.io/commands/ttl)_\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro)_\r\n\r\n_Returns: TTL in seconds_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"300|%1:%2\", _prefix, _uniqueID];\r\n```\r\n\r\n\r\n**400**\r\n\r\nRemoves the specified key.\r\n\r\n_Uses: [DEL](http://redis.io/commands/del)_\r\n\r\n_Call Type: Synchronous_\r\n\r\n\r\n\r\n_Input: [Key](http://redis.io/topics/data-types-intro)_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"400|%1:%2\", _prefix, _uniqueID];\r\n```\r\n\r\n\r\n**500**\r\n\r\n_Uses: [PING](http://redis.io/commands/ping)_\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Nothing_\r\n\r\n_Returns: \"PONG\"_\r\n\r\n```\r\n'epochserver' callExtension '500'\r\n```\r\n\r\n\r\n\r\n**501**\r\n\r\nGet current time.\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Nothing_\r\n\r\n_Returns: Array [YYYY,MM,DD,HH,MM,SS]_\r\n\r\n\r\n```\r\n'epochserver' callExtension '510'\r\n```\r\n\r\n\r\n**600**\r\n\r\nUsed to push data from database server in a queue.\r\n\r\n_Uses: [LPOP](http://redis.io/commands/lpop) with CMD- prefix_\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Server InstanceID_\r\n\r\n_Returns: Array [1,\"\"]_\r\n\r\n\r\n```\r\n_response = \"epochserver\" callExtension format[\"600|%1\",_instanceID];\r\n```\r\n\r\n\r\n**700**\r\n\r\nLog in Redis\r\n\r\n\r\n\r\n_Uses: LPUSH _with -LOG postfix\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Key Prefix, Message_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"700|%1|%2\", _prefix, _message];\r\n```\r\n\r\n\r\n**701**\r\n\r\nLog in Redis\r\n\r\n\r\n\r\n_Uses: LPUSH _with -LOG postfix\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Key Prefix, Message_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"701|%1|%2\", _prefix, _message];\r\n```\r\n\r\n\r\n**800**\r\n\r\n\r\n\r\nAppend strings specified to end of first line of publicvariable.txt and then runs BE command #loadEvents.\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Strings_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"800|%1|%2|%3|%4\", _var1, _var2, _var3, _var4];\r\n```\r\n\r\n\r\n**801**\r\n\r\nAppend strings specified to end of first line of publicvariable.txt and then runs BE command #loadEvents.\r\n\r\n\r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: Strings_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n\"epochserver\" callExtension format[\"800|%1|%2|%3|%4\", _var1, _var2, _var3, _var4];\r\n```\r\n\r\n**810**\r\n\r\nGet random string, [a-zA-Z]{5-10}, if only one string is requested it will return a string instead of a array\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Count_\r\n\r\n_Returns: Array or String_\r\n\r\n\r\n\r\n\r\n\r\n```\r\n_response = 'epochserver' callExtension format['810|%1',_count];\r\n```\r\n\r\n\r\n\r\n**820**\r\n\r\nAdd ban to bans.txt and execute #loadBans (Depreciated should use 900 calls)\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Steam64ID, Reason_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n'epochserver' callExtension format['820|%1|%2',getPlayerUID _playerObj,_reason];\r\n```\r\n\r\n**821**\r\n\r\nAdd ban to bans.txt and execute #loadBans (Depreciated should use 900 calls)\r\n\r\n\r\n\r\n_Call Type: Synchronous_\r\n\r\n_Input: Steam64ID, Reason_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\nepochserver' callExtension format['821|%1|%2',getPlayerUID _playerObj,_reason];\r\n```\r\n\r\n\r\n**901**\r\n\r\nBroadcast message to server\r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: Message_\r\n\r\n_Returns: Nothing_\r\n\r\n```\r\n'epochserver' callExtension format['901|%1', _message];\r\n```\r\n\r\n\r\n**911**\r\n\r\nKick with message\r\n\r\n\r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: player64ID, Message_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n'epochserver' callExtension format['911|%1|%2', _playerUID, _reason];\r\n```\r\n\r\n\r\n\r\n**921**\r\n\r\nBan with message and duration\r\n\r\n\r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: player64ID, Message, duration_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n'epochserver' callExtension format['921|%1|%2|%3', _playerUID, _message, _duration];\r\n```\r\n\r\n\r\n**930**\r\n\r\nUnlock server using BE command #unlock\r\n\r\n\r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: Nothing_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n'epochserver' callExtension '930'\r\n```\r\n\r\n**931**\r\n\r\nLock server using BE command #lock\r\n\r\n\r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: Nothing_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n```\r\n'epochserver' callExtension '931'\r\n```\r\n\r\n\r\n**991**\r\n\r\nShutdown Server using BE #shutdown command.  \r\n\r\n_Call Type: Asynchronous_\r\n\r\n_Input: Nothing_\r\n\r\n_Returns: Nothing_\r\n\r\n\r\n\r\n```\r\n'epochserver' callExtension '991'\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}